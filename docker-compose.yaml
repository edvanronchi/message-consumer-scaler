version: '3.8'

services:
#  scaler-app:
#    build:
#      context: scaler-app
#    container_name: scaler-app
#    ports:
#      - "8080:80"

  gateway-api:
    build:
      context: gateway-api
    container_name: gateway-api
    ports:
      - "8090:8090"

  docker-dind:
    build:
      context: docker-dind
    container_name: docker-dind
    privileged: true
    depends_on:
      rabbitmq:
        condition: service_healthy
      websocket-server:
        condition: service_started

  message-producer-api:
    build:
      context: message-producer-api
    container_name: message-producer-api
    depends_on:
      rabbitmq:
        condition: service_healthy

  websocket-server:
    build:
      context: websocket-server
      dockerfile: Dockerfile
    container_name: websocket-server
    ports:
      - "4000:4000"

  grafana:
    build:
      context: grafana
    container_name: grafana
    ports:
      - "10000:3000"
    privileged: true
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    depends_on:
      rabbitmq:
        condition: service_healthy
      prometheus:
        condition: service_started

  prometheus:
    build:
      context: prometheus
    container_name: prometheus
    ports:
      - "10001:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped

  rabbitmq:
    build:
      context: rabbitmq
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "10002:15672"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 20s
      retries: 5
